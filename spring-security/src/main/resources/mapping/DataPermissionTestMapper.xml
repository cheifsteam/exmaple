<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springsecurity.mapper.DataPermissionTestMapper">
  <resultMap id="BaseResultMap" type="com.example.springsecurity.domain.DataPermissionTest">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="FIELD1" jdbcType="VARCHAR" property="field1" />
    <result column="FIELD2" jdbcType="VARCHAR" property="field2" />
    <result column="FIELD3" jdbcType="VARCHAR" property="field3" />
    <result column="FIELD4" jdbcType="VARCHAR" property="field4" />
    <result column="DEPT_ID" jdbcType="INTEGER" property="deptId" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, FIELD1, FIELD2, FIELD3, FIELD4, DEPT_ID, CREATE_TIME
  </sql>
  <select id="selectByExample" parameterType="com.example.springsecurity.domain.DataPermissionTestExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_data_permission_test

    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>

  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_data_permission_test
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_data_permission_test
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.springsecurity.domain.DataPermissionTest">
    insert into t_data_permission_test (ID, FIELD1, FIELD2,
      FIELD3, FIELD4, DEPT_ID,
      CREATE_TIME)
    values (#{id,jdbcType=INTEGER}, #{field1,jdbcType=VARCHAR}, #{field2,jdbcType=VARCHAR},
      #{field3,jdbcType=VARCHAR}, #{field4,jdbcType=VARCHAR}, #{deptId,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.springsecurity.domain.DataPermissionTest">
    insert into t_data_permission_test
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="field1 != null">
        FIELD1,
      </if>
      <if test="field2 != null">
        FIELD2,
      </if>
      <if test="field3 != null">
        FIELD3,
      </if>
      <if test="field4 != null">
        FIELD4,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="field1 != null">
        #{field1,jdbcType=VARCHAR},
      </if>
      <if test="field2 != null">
        #{field2,jdbcType=VARCHAR},
      </if>
      <if test="field3 != null">
        #{field3,jdbcType=VARCHAR},
      </if>
      <if test="field4 != null">
        #{field4,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.springsecurity.domain.DataPermissionTest">
    update t_data_permission_test
    <set>
      <if test="field1 != null">
        FIELD1 = #{field1,jdbcType=VARCHAR},
      </if>
      <if test="field2 != null">
        FIELD2 = #{field2,jdbcType=VARCHAR},
      </if>
      <if test="field3 != null">
        FIELD3 = #{field3,jdbcType=VARCHAR},
      </if>
      <if test="field4 != null">
        FIELD4 = #{field4,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.springsecurity.domain.DataPermissionTest">
    update t_data_permission_test
    set FIELD1 = #{field1,jdbcType=VARCHAR},
      FIELD2 = #{field2,jdbcType=VARCHAR},
      FIELD3 = #{field3,jdbcType=VARCHAR},
      FIELD4 = #{field4,jdbcType=VARCHAR},
      DEPT_ID = #{deptId,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <select id="select" parameterType="com.example.springsecurity.domain.DataPermissionTest" resultMap="BaseResultMap">
  select *
  from t_data_permission_test
    where  ${params.dataScope}
  </select>
</mapper>
